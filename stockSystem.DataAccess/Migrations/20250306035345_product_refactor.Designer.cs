// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockSystem.dataAccess.context;

#nullable disable

namespace stockSystem.DataAccess.Migrations
{
    [DbContext(typeof(stockSystemContext))]
    [Migration("20250306035345_product_refactor")]
    partial class product_refactor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StockSystem.dataAccess.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("categoryId")
                        .HasColumnType("int");

                    b.Property<decimal>("cost")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int>("createdBy")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("margin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(5,2)")
                        .HasComputedColumnSql("[Cost]  * (1 + [Margin])");

                    b.Property<string>("size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("supplierId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("categoryId");

                    b.HasIndex("createdBy");

                    b.HasIndex("supplierId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("StockSystem.dataAccess.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RolId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastName = "Admin",
                            Name = "Super",
                            PasswordHash = new byte[] { 21, 77, 51, 159, 222, 103, 204, 167, 25, 194, 66, 131, 119, 42, 43, 14, 107, 120, 156, 80, 208, 46, 221, 201, 5, 16, 69, 175, 250, 38, 194, 200, 78, 1, 103, 231, 240, 73, 181, 155, 15, 125, 227, 134, 11, 7, 63, 104, 55, 53, 129, 156, 246, 186, 18, 164, 43, 166, 158, 186, 38, 121, 84, 221 },
                            PasswordSalt = new byte[] { 85, 12, 190, 202, 136, 213, 146, 79, 98, 119, 222, 9, 52, 70, 38, 101, 214, 184, 174, 141, 255, 97, 68, 245, 135, 154, 226, 59, 174, 102, 73, 32, 83, 217, 177, 142, 233, 223, 131, 131, 38, 237, 109, 125, 229, 127, 33, 19, 13, 39, 131, 136, 250, 229, 101, 130, 137, 238, 57, 144, 102, 232, 14, 239, 213, 134, 204, 14, 159, 246, 67, 184, 167, 15, 237, 142, 254, 161, 127, 220, 36, 2, 188, 251, 27, 22, 140, 251, 239, 245, 49, 219, 55, 252, 182, 160, 240, 202, 8, 144, 2, 142, 107, 119, 251, 238, 126, 202, 76, 151, 128, 37, 93, 94, 248, 14, 166, 148, 222, 14, 58, 144, 154, 89, 96, 47, 145, 186 },
                            RolId = 1,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("stockSystem.DataAccess.Models.Category", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Alimento"
                        },
                        new
                        {
                            id = 2,
                            name = "Ropa"
                        },
                        new
                        {
                            id = 3,
                            name = "Juguetes"
                        });
                });

            modelBuilder.Entity("stockSystem.DataAccess.Models.Rol", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Rols");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "ADMIN"
                        },
                        new
                        {
                            id = 2,
                            name = "SALESMAN"
                        },
                        new
                        {
                            id = 3,
                            name = "STOCKER"
                        });
                });

            modelBuilder.Entity("stockSystem.DataAccess.Models.Sales", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("salesBy")
                        .HasColumnType("int");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("id");

                    b.HasIndex("salesBy");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("stockSystem.DataAccess.Models.SalesDetail", b =>
                {
                    b.Property<int>("salesId")
                        .HasColumnType("int");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<decimal>("quantity")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("salesId", "productId");

                    b.HasIndex("productId");

                    b.ToTable("SalesDetails", (string)null);
                });

            modelBuilder.Entity("stockSystem.DataAccess.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(10,3)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("WarehouseId", "ProductId")
                        .IsUnique();

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("stockSystem.DataAccess.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RFC")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("stockSystem.DataAccess.Models.Warehouse", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("StockSystem.dataAccess.Models.Product", b =>
                {
                    b.HasOne("stockSystem.DataAccess.Models.Category", "category")
                        .WithMany()
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockSystem.dataAccess.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("stockSystem.DataAccess.Models.Supplier", "supplier")
                        .WithMany()
                        .HasForeignKey("supplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("category");

                    b.Navigation("supplier");

                    b.Navigation("user");
                });

            modelBuilder.Entity("StockSystem.dataAccess.Models.User", b =>
                {
                    b.HasOne("stockSystem.DataAccess.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("stockSystem.DataAccess.Models.Sales", b =>
                {
                    b.HasOne("StockSystem.dataAccess.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("salesBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("stockSystem.DataAccess.Models.SalesDetail", b =>
                {
                    b.HasOne("StockSystem.dataAccess.Models.Product", "products")
                        .WithMany("salesDetails")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("stockSystem.DataAccess.Models.Sales", "sales")
                        .WithMany("salesDetails")
                        .HasForeignKey("salesId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("products");

                    b.Navigation("sales");
                });

            modelBuilder.Entity("stockSystem.DataAccess.Models.Stock", b =>
                {
                    b.HasOne("StockSystem.dataAccess.Models.Product", "Product")
                        .WithMany("Stock")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("stockSystem.DataAccess.Models.Warehouse", "Warehouse")
                        .WithMany("Stock")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("StockSystem.dataAccess.Models.Product", b =>
                {
                    b.Navigation("Stock");

                    b.Navigation("salesDetails");
                });

            modelBuilder.Entity("stockSystem.DataAccess.Models.Sales", b =>
                {
                    b.Navigation("salesDetails");
                });

            modelBuilder.Entity("stockSystem.DataAccess.Models.Warehouse", b =>
                {
                    b.Navigation("Stock");
                });
#pragma warning restore 612, 618
        }
    }
}
